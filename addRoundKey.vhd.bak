-- Quartus II VHDL Template
-- Signed Adder

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity addRoundKey is

	generic
	(
		DATA_WIDTH : natural := 128
	);

	port 
	(
		clk            : std_logic;
		plainText	   : in std_logic_vector((DATA_WIDTH-1) downto 0);
		keyIni     	   : in std_logic_vector((DATA_WIDTH-1) downto 0);
		result         : out std_logic_vector((DATA_WIDTH-1) downto 0)
	);

end entity;

architecture rtl of addRoundKey is

signal reg_teste, reg_plainText, reg_keyIni : std_logic_vector((DATA_WIDTH-1) downto 0);

begin
	process(clk)
	begin
		if(rising_edge(clk)) then
			reg_plainText <= plainText;
			reg_keyIni <= keyIni;
			for i in (DATA_WIDTH-1) downto 0 loop
				result(i) <= reg_plainText(i) xor reg_keyIni(i);
			end loop;
		end if;
	end process;
	
end rtl;
