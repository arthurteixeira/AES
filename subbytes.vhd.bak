-- Quartus II VHDL Template
-- Signed Adder

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity subBytes is

	generic
	(
		DATA_WIDTH : natural := 128
	);

	port 
	(
		clk          : std_logic;
		theText	    : in std_logic_vector((DATA_WIDTH-1) downto 0);
		outSubBytes  : out std_logic_vector((DATA_WIDTH-1) downto 0)
	);

end entity;

architecture rtl of subBytes is

signal valor : std_logic_vector((DATA_WIDTH-1) downto 0);
variable contText, contOut : std_logic_vector((DATA_WIDTH-1) downto 0);

	for i in 8 downto 0 loop
		valor(i) <= theText(i);
	end loop;
	for i in 8 downto 0 loop
		outSubBytes(i) <= valor(i);
	end loop;
	

begin
	process(clk)
	begin
		if(rising_edge(clk)) then
		end if;
	end process;
end rtl;
